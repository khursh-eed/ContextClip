{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/khursheedfatima/Documents/Projects/Meeting_summerizer/frontend/src/components/Upload.tsx"],"sourcesContent":["'use client';\r\nimport { useState, useRef } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button,\r\n  Progress,\r\n  Chip,\r\n  Divider,\r\n  Spacer,\r\n  Code\r\n} from '@heroui/react';\r\nimport { Upload as UploadIcon, FileText, Play, Search, CheckCircle, AlertCircle } from 'lucide-react';\r\n\r\n// Palette\r\nconst BG_DARK = '#413F3D';\r\nconst BG_GRADIENT = '#697184';\r\nconst CARD = '#F2F1EF';\r\nconst TEXT_DARK = '#F2F1EF';\r\nconst TEXT_LIGHT = '#413F3D';\r\nconst ACCENT = '#697184';\r\nconst SECONDARY = '#B1A6A4';\r\nconst BORDER = '#D8CFD0';\r\n\r\ninterface JobStatus {\r\n  job_id: string;\r\n  status: 'queued' | 'processing' | 'completed' | 'failed';\r\n  message?: string;\r\n}\r\n\r\nconst Upload = () => {\r\n  const [files, setFiles] = useState<{ media: File | null; slides: File[] }>({ media: null, slides: [] });\r\n  const [uploading, setUploading] = useState(false);\r\n  const [jobStatus, setJobStatus] = useState<JobStatus | null>(null);\r\n  const [polling, setPolling] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const mediaRef = useRef<HTMLInputElement>(null);\r\n  const slidesRef = useRef<HTMLInputElement>(null);\r\n  const router = useRouter();\r\n\r\n  const handleMediaChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFiles(prev => ({ ...prev, media: e.target.files![0] }));\r\n    }\r\n  };\r\n  const handleSlidesChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      setFiles(prev => ({ ...prev, slides: Array.from(e.target.files!) }));\r\n    }\r\n  };\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    const mediaTypes = ['audio/', 'video/'];\r\n    const imageTypes = ['image/', 'application/pdf'];\r\n    droppedFiles.forEach(file => {\r\n      if (mediaTypes.some(type => file.type.startsWith(type)) && !files.media) {\r\n        setFiles(prev => ({ ...prev, media: file }));\r\n      } else if (imageTypes.some(type => file.type.startsWith(type))) {\r\n        setFiles(prev => ({ ...prev, slides: [...prev.slides, file] }));\r\n      }\r\n    });\r\n  };\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(true);\r\n  };\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n  };\r\n  const pollJobStatus = async (jobId: string) => {\r\n    setPolling(true);\r\n    const pollInterval = setInterval(async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/job/${jobId}`);\r\n        if (response.ok) {\r\n          const jobData = await response.json();\r\n          setJobStatus(jobData);\r\n          if (jobData.status === 'completed') {\r\n            clearInterval(pollInterval);\r\n            setPolling(false);\r\n            setTimeout(() => {\r\n              router.push(`/results/${jobId}`);\r\n            }, 2000);\r\n          } else if (jobData.status === 'failed') {\r\n            clearInterval(pollInterval);\r\n            setPolling(false);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error polling job status:', error);\r\n      }\r\n    }, 2000);\r\n    setTimeout(() => {\r\n      clearInterval(pollInterval);\r\n      setPolling(false);\r\n    }, 300000);\r\n  };\r\n  const handleUpload = async () => {\r\n    if (!files.media) {\r\n      alert('Please select a media file');\r\n      return;\r\n    }\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('media', files.media);\r\n    files.slides.forEach(slide => {\r\n      formData.append('slides', slide);\r\n    });\r\n    try {\r\n      const response = await fetch('http://localhost:8000/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setJobStatus({\r\n          job_id: result.job_id,\r\n          status: 'queued',\r\n          message: result.message\r\n        });\r\n        pollJobStatus(result.job_id);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Upload failed: ${error.detail || 'Unknown error'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      alert('Upload failed: Network error');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n  const clearFiles = () => {\r\n    setFiles({ media: null, slides: [] });\r\n    setJobStatus(null);\r\n    if (mediaRef.current) mediaRef.current.value = '';\r\n    if (slidesRef.current) slidesRef.current.value = '';\r\n  };\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full\">\r\n      <Card\r\n        className=\"bg-[#F2F1EF] border border-[#D8CFD0] shadow-2xl rounded-2xl px-8 py-10 w-full max-w-lg flex flex-col items-center\"\r\n      >\r\n        <div className=\"flex flex-col items-center mb-6\">\r\n          <div className=\"w-20 h-20 flex items-center justify-center rounded-full bg-[#697184] mb-4\">\r\n            <UploadIcon className=\"w-10 h-10 text-[#F2F1EF]\" />\r\n          </div>\r\n          <h2 className=\"text-2xl font-bold text-[#413F3D] mb-2\">Upload Your Meeting</h2>\r\n          <p className=\"text-[#B1A6A4] text-center\">Audio, video, or slides. All files are processed securely.</p>\r\n        </div>\r\n        {/* Drag & Drop Zone */}\r\n        <Card\r\n          className={`border-2 border-dashed w-full p-8 flex flex-col items-center justify-center transition-all duration-300 cursor-pointer rounded-xl ${\r\n            dragActive\r\n              ? 'bg-[#697184]/20 border-[#697184]' : 'bg-[#D8CFD0] border-[#D8CFD0] hover:bg-[#697184]/10 hover:border-[#697184]'\r\n          }`}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          isPressable\r\n        >\r\n          <CardBody className=\"text-center space-y-4\">\r\n            <div className=\"w-16 h-16 mx-auto bg-[#697184] rounded-full flex items-center justify-center shadow-lg\">\r\n              <UploadIcon className=\"w-8 h-8 text-[#F2F1EF]\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-xl font-bold text-[#413F3D] mb-2\">\r\n                Drop your files here, or click to browse\r\n              </h3>\r\n              <p className=\"text-[#B1A6A4] text-base\">\r\n                Supports audio, video files and presentation slides\r\n              </p>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n        <Spacer y={8} />\r\n        <div className=\"grid md:grid-cols-2 gap-8 w-full\">\r\n          {/* Media File Upload */}\r\n          <Card className=\"border border-[#D8CFD0] bg-[#F2F1EF] hover:shadow-lg transition-all duration-300 rounded-xl\">\r\n            <CardHeader className=\"pb-3\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-[#697184] rounded-xl flex items-center justify-center\">\r\n                  <Play className=\"w-5 h-5 text-[#F2F1EF]\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-lg font-bold text-[#413F3D]\">Media File</h4>\r\n                  <p className=\"text-sm text-[#B1A6A4]\">Audio or video</p>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"pt-0\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  ref={mediaRef}\r\n                  type=\"file\"\r\n                  accept=\"audio/*,video/*\"\r\n                  onChange={handleMediaChange}\r\n                  className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10\"\r\n                />\r\n                <Card className=\"bg-[#D8CFD0] hover:bg-[#697184]/10 transition-colors cursor-pointer rounded-lg\">\r\n                  <CardBody className=\"p-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-12 h-12 bg-[#697184] rounded-xl flex items-center justify-center\">\r\n                        <FileText className=\"w-6 h-6 text-[#F2F1EF]\" />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <p className=\"font-semibold text-[#413F3D]\">\r\n                          {files.media ? files.media.name : 'Choose Files'}\r\n                        </p>\r\n                        <p className=\"text-sm text-[#B1A6A4]\">\r\n                          {files.media ? formatFileSize(files.media.size) : 'MP3, WAV, MP4, etc.'}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n          {/* Slides Upload */}\r\n          <Card className=\"border border-[#D8CFD0] bg-[#F2F1EF] hover:shadow-lg transition-all duration-300 rounded-xl\">\r\n            <CardHeader className=\"pb-3\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-[#697184] rounded-xl flex items-center justify-center\">\r\n                  <FileText className=\"w-5 h-5 text-[#F2F1EF]\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-lg font-bold text-[#413F3D]\">Slides</h4>\r\n                  <p className=\"text-sm text-[#B1A6A4]\">Images or PDFs</p>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"pt-0\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  ref={slidesRef}\r\n                  type=\"file\"\r\n                  multiple\r\n                  accept=\"image/*,.pdf\"\r\n                  onChange={handleSlidesChange}\r\n                  className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10\"\r\n                />\r\n                <Card className=\"bg-[#D8CFD0] hover:bg-[#697184]/10 transition-colors cursor-pointer rounded-lg\">\r\n                  <CardBody className=\"p-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-12 h-12 bg-[#697184] rounded-xl flex items-center justify-center\">\r\n                        <FileText className=\"w-6 h-6 text-[#F2F1EF]\" />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <p className=\"font-semibold text-[#413F3D]\">\r\n                          {files.slides.length > 0 ? `${files.slides.length} slide(s) selected` : 'Choose Files'}\r\n                        </p>\r\n                        <p className=\"text-sm text-[#B1A6A4]\">PNG, JPG, PDF</p>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        {/* Selected Files Preview */}\r\n        {(files.media || files.slides.length > 0) && (\r\n          <>\r\n            <Spacer y={6} />\r\n            <Card className=\"bg-[#D8CFD0] border border-[#697184] rounded-xl\">\r\n              <CardHeader className=\"pb-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <CheckCircle className=\"w-5 h-5 text-[#697184]\" />\r\n                  <h4 className=\"text-lg font-bold text-[#697184]\">Selected Files</h4>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody className=\"pt-0\">\r\n                <div className=\"space-y-3\">\r\n                  {files.media && (\r\n                    <div className=\"flex items-center justify-between p-3 bg-[#F2F1EF] rounded-lg\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <Play className=\"w-5 h-5 text-[#697184]\" />\r\n                        <span className=\"font-medium text-[#697184]\">{files.media.name}</span>\r\n                      </div>\r\n                      <Chip size=\"sm\" variant=\"flat\" color=\"primary\">\r\n                        {formatFileSize(files.media.size)}\r\n                      </Chip>\r\n                    </div>\r\n                  )}\r\n                  {files.slides.map((slide, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-[#F2F1EF] rounded-lg\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <FileText className=\"w-5 h-5 text-[#697184]\" />\r\n                        <span className=\"font-medium text-[#697184]\">{slide.name}</span>\r\n                      </div>\r\n                      <Chip size=\"sm\" variant=\"flat\" color=\"primary\">\r\n                        {formatFileSize(slide.size)}\r\n                      </Chip>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        )}\r\n        <Spacer y={8} />\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-4 w-full\">\r\n          <Button\r\n            onClick={handleUpload}\r\n            isDisabled={!files.media || uploading || polling}\r\n            isLoading={uploading}\r\n            color=\"primary\"\r\n            size=\"lg\"\r\n            className=\"flex-1 bg-[#697184] text-[#F2F1EF] font-semibold rounded-full hover:bg-[#5a6173] transition-colors\"\r\n            startContent={!uploading && <UploadIcon className=\"w-5 h-5\" />}\r\n          >\r\n            {uploading ? 'Processing...' : 'Process with AI'}\r\n          </Button>\r\n          <Button\r\n            onClick={clearFiles}\r\n            isDisabled={uploading || polling}\r\n            variant=\"bordered\"\r\n            size=\"lg\"\r\n            className=\"px-8 border-2 border-[#D8CFD0] text-[#413F3D] font-semibold hover:bg-[#D8CFD0] rounded-full\"\r\n          >\r\n            Clear All\r\n          </Button>\r\n        </div>\r\n        {/* Job Status */}\r\n        {jobStatus && (\r\n          <>\r\n            <Divider />\r\n            <Card className=\"m-6 bg-[#D8CFD0] border border-[#697184] rounded-xl\">\r\n              <CardHeader>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-10 h-10 bg-[#697184] rounded-xl flex items-center justify-center\">\r\n                    <AlertCircle className=\"w-5 h-5 text-[#F2F1EF]\" />\r\n                  </div>\r\n                  <h3 className=\"text-xl font-bold text-[#413F3D]\">Processing Status</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody className=\"space-y-4\">\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <p className=\"text-sm font-semibold text-[#413F3D] mb-2\">Job ID:</p>\r\n                    <Code size=\"sm\" className=\"bg-[#F2F1EF] text-[#413F3D]\">\r\n                      {jobStatus.job_id}\r\n                    </Code>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-semibold text-[#413F3D] mb-2\">Status:</p>\r\n                    <Chip\r\n                      variant=\"flat\"\r\n                      color={\r\n                        jobStatus.status === 'completed' ? 'success' :\r\n                        jobStatus.status === 'failed' ? 'danger' :\r\n                        jobStatus.status === 'processing' ? 'warning' :\r\n                        'primary'\r\n                      }\r\n                      size=\"lg\"\r\n                    >\r\n                      {jobStatus.status.toUpperCase()}\r\n                    </Chip>\r\n                  </div>\r\n                </div>\r\n                {jobStatus.message && (\r\n                  <Card className=\"bg-[#F2F1EF] border border-[#D8CFD0] rounded-lg\">\r\n                    <CardBody>\r\n                      <p className=\"text-[#413F3D]\">{jobStatus.message}</p>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n                {polling && (\r\n                  <Card className=\"bg-[#697184]/10 border border-[#697184] rounded-lg\">\r\n                    <CardBody>\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <Progress\r\n                          size=\"sm\"\r\n                          isIndeterminate\r\n                          color=\"primary\"\r\n                          className=\"flex-1\"\r\n                        />\r\n                        <p className=\"text-[#697184] font-semibold\">AI is processing your content...</p>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n                {jobStatus.status === 'completed' && (\r\n                  <Card className=\"bg-green-50 border border-green-200 rounded-lg\">\r\n                    <CardBody>\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                        <p className=\"text-green-700 font-semibold\">Processing complete! Redirecting to results...</p>\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"sources":["file:///Users/khursheedfatima/Documents/Projects/Meeting_summerizer/frontend/src/components/Search.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button,\r\n  Input,\r\n  Chip,\r\n  Divider,\r\n  Code\r\n} from '@heroui/react';\r\nimport { Search as SearchIcon, FileText, Clock, User, ExternalLink } from 'lucide-react';\r\n\r\n// Palette\r\nconst CARD = '#F2F1EF';\r\nconst TEXT_LIGHT = '#413F3D';\r\nconst ACCENT = '#697184';\r\nconst SECONDARY = '#B1A6A4';\r\nconst BORDER = '#D8CFD0';\r\n\r\ninterface SearchResult {\r\n  job_id: string;\r\n  relevance_score: number;\r\n  matched_segments: Array<{\r\n    start_time: number;\r\n    end_time: number;\r\n    speaker: string;\r\n    text: string;\r\n    highlight: string;\r\n  }>;\r\n  matched_slides: Array<{\r\n    slide_number: number;\r\n    text: string;\r\n    highlight: string;\r\n  }>;\r\n  job_info: {\r\n    status: string;\r\n    created_at?: string;\r\n    meeting_duration?: number;\r\n  };\r\n}\r\n\r\ninterface SearchResponse {\r\n  query: string;\r\n  total_results: number;\r\n  results: SearchResult[];\r\n}\r\n\r\nconst Search = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState<SearchResponse | null>(null);\r\n  const [searching, setSearching] = useState(false);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  const handleSearch = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    setSearching(true);\r\n    setHasSearched(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/search?q=${encodeURIComponent(query.trim())}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSearchResults(data);\r\n      } else {\r\n        setSearchResults({ query: query.trim(), total_results: 0, results: [] });\r\n      }\r\n    } catch (error) {\r\n      setSearchResults({ query: query.trim(), total_results: 0, results: [] });\r\n    } finally {\r\n      setSearching(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number): string => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = Math.floor(seconds % 60);\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const highlightText = (text: string, highlight: string): React.ReactElement => {\r\n    if (!highlight) return <span>{text}</span>;\r\n    const parts = text.split(new RegExp(`(${highlight.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi'));\r\n    return (\r\n      <span>\r\n        {parts.map((part, index) =>\r\n          part.toLowerCase() === highlight.toLowerCase() ? (\r\n            <mark key={index} className=\"bg-yellow-200 px-1 rounded\">{part}</mark>\r\n          ) : (\r\n            <span key={index}>{part}</span>\r\n          )\r\n        )}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto space-y-8\">\r\n      {/* Header */}\r\n      <Card className=\"bg-[#F2F1EF] border border-[#D8CFD0] shadow-xl rounded-2xl\">\r\n        <CardBody className=\"p-8 text-center\">\r\n          <div className=\"w-16 h-16 bg-[#697184] rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg\">\r\n            <SearchIcon className=\"w-8 h-8 text-[#F2F1EF]\" />\r\n          </div>\r\n          <h1 className=\"text-4xl font-bold text-[#413F3D] mb-4\">\r\n            Search Meetings\r\n          </h1>\r\n          <p className=\"text-xl text-[#B1A6A4] max-w-2xl mx-auto\">\r\n            Search across all meeting transcripts and slide content with AI-powered relevance ranking\r\n          </p>\r\n        </CardBody>\r\n      </Card>\r\n      {/* Search Form */}\r\n      <Card className=\"bg-[#F2F1EF] border border-[#D8CFD0] shadow-xl rounded-2xl\">\r\n        <CardBody className=\"p-8\">\r\n          <form onSubmit={handleSearch} className=\"space-y-6\">\r\n            <div className=\"flex space-x-4\">\r\n              <Input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                placeholder=\"Search for topics, speakers, action items...\"\r\n                size=\"lg\"\r\n                startContent={<SearchIcon className=\"w-5 h-5 text-[#697184]\" />}\r\n                className=\"flex-1 bg-[#D8CFD0] text-[#413F3D] border border-[#B1A6A4] rounded-lg\"\r\n                classNames={{\r\n                  input: 'text-lg',\r\n                  inputWrapper: 'h-14',\r\n                }}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                isDisabled={!query.trim() || searching}\r\n                isLoading={searching}\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"px-8 bg-[#697184] text-[#F2F1EF] font-semibold rounded-full hover:bg-[#5a6173]\"\r\n              >\r\n                {searching ? 'Searching...' : 'Search'}\r\n              </Button>\r\n            </div>\r\n            {/* Quick Search Suggestions */}\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-[#413F3D] mb-3\">Quick searches:</p>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {['action items', 'API', 'demo', 'Sarah', 'testing', 'deadlines'].map((suggestion) => (\r\n                  <Chip\r\n                    key={suggestion}\r\n                    onClick={() => setQuery(suggestion)}\r\n                    variant=\"flat\"\r\n                    color=\"default\"\r\n                    className=\"cursor-pointer bg-[#D8CFD0] text-[#413F3D] hover:bg-[#697184]/10 transition-colors\"\r\n                  >\r\n                    {suggestion}\r\n                  </Chip>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      {/* Search Results */}\r\n      {hasSearched && (\r\n        <Card className=\"bg-[#F2F1EF] border border-[#D8CFD0] shadow-xl rounded-2xl\">\r\n          <CardBody className=\"p-8\">\r\n            {searchResults ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center mb-8\">\r\n                  <h2 className=\"text-2xl font-bold text-[#413F3D]\">\r\n                    Search Results\r\n                  </h2>\r\n                  <Chip variant=\"flat\" color=\"primary\" size=\"lg\" className=\"bg-[#697184] text-[#F2F1EF]\">\r\n                    {searchResults.total_results} result(s) for \"{searchResults.query}\"\r\n                  </Chip>\r\n                </div>\r\n                {searchResults.results.length > 0 ? (\r\n                  <div className=\"space-y-6\">\r\n                    {searchResults.results.map((result, index) => (\r\n                      <Card key={index} className=\"border border-[#D8CFD0] hover:shadow-lg transition-all duration-300 rounded-xl bg-[#F2F1EF]\">\r\n                        <CardHeader className=\"pb-3\">\r\n                          <div className=\"flex justify-between items-start w-full\">\r\n                            <div className=\"space-y-2\">\r\n                              <Button\r\n                                as={Link}\r\n                                href={`/results/${result.job_id}`}\r\n                                variant=\"light\"\r\n                                color=\"primary\"\r\n                                size=\"lg\"\r\n                                className=\"text-lg font-semibold p-0 h-auto min-w-0 justify-start text-[#697184] hover:text-[#413F3D]\"\r\n                                endContent={<ExternalLink className=\"w-4 h-4\" />}\r\n                              >\r\n                                Job {result.job_id.substring(0, 8)}...\r\n                              </Button>\r\n                              <div className=\"flex items-center space-x-4\">\r\n                                <Chip\r\n                                  variant=\"flat\"\r\n                                  color={result.job_info.status === 'completed' ? 'success' : 'warning'}\r\n                                  size=\"sm\"\r\n                                >\r\n                                  {result.job_info.status.toUpperCase()}\r\n                                </Chip>\r\n                                {result.job_info.meeting_duration && (\r\n                                  <div className=\"flex items-center space-x-1 text-sm text-[#B1A6A4]\">\r\n                                    <Clock className=\"w-4 h-4\" />\r\n                                    <span>Duration: {formatTime(result.job_info.meeting_duration)}</span>\r\n                                  </div>\r\n                                )}\r\n                                {result.job_info.created_at && (\r\n                                  <span className=\"text-sm text-[#B1A6A4]\">\r\n                                    Created: {new Date(result.job_info.created_at).toLocaleDateString()}\r\n                                  </span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <Chip variant=\"bordered\" size=\"sm\" className=\"border-[#697184] text-[#697184]\">\r\n                              Relevance: {(result.relevance_score * 100).toFixed(0)}%\r\n                            </Chip>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardBody className=\"pt-0\">\r\n                          {/* Matched Transcript Segments */}\r\n                          {result.matched_segments.length > 0 && (\r\n                            <div className=\"mb-6\">\r\n                              <h4 className=\"text-lg font-semibold text-[#413F3D] mb-4 flex items-center\">\r\n                                <FileText className=\"w-5 h-5 mr-2 text-[#697184]\" />\r\n                                Transcript Matches ({result.matched_segments.length})\r\n                              </h4>\r\n                              <div className=\"space-y-3\">\r\n                                {result.matched_segments.slice(0, 3).map((segment, segIndex) => (\r\n                                  <Card key={segIndex} className=\"bg-[#D8CFD0] rounded-lg\">\r\n                                    <CardBody className=\"p-4\">\r\n                                      <div className=\"flex items-start space-x-4\">\r\n                                        <Code size=\"sm\" className=\"bg-[#697184]/10 text-[#697184] min-w-[60px]\">\r\n                                          {formatTime(segment.start_time)}\r\n                                        </Code>\r\n                                        <Chip\r\n                                          variant=\"flat\"\r\n                                          color=\"primary\"\r\n                                          size=\"sm\"\r\n                                          startContent={<User className=\"w-3 h-3\" />}\r\n                                          className=\"bg-[#697184]/10 text-[#697184]\"\r\n                                        >\r\n                                          {segment.speaker}\r\n                                        </Chip>\r\n                                        <p className=\"text-[#413F3D] flex-1\">\r\n                                          {highlightText(segment.text, segment.highlight)}\r\n                                        </p>\r\n                                      </div>\r\n                                    </CardBody>\r\n                                  </Card>\r\n                                ))}\r\n                                {result.matched_segments.length > 3 && (\r\n                                  <p className=\"text-sm text-[#B1A6A4] italic pl-4\">\r\n                                    +{result.matched_segments.length - 3} more matches...\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          {/* Matched Slides */}\r\n                          {result.matched_slides.length > 0 && (\r\n                            <div className=\"mb-4\">\r\n                              <h4 className=\"text-lg font-semibold text-[#413F3D] mb-4 flex items-center\">\r\n                                <FileText className=\"w-5 h-5 mr-2 text-[#697184]\" />\r\n                                Slide Matches ({result.matched_slides.length})\r\n                              </h4>\r\n                              <div className=\"space-y-3\">\r\n                                {result.matched_slides.slice(0, 2).map((slide, slideIndex) => (\r\n                                  <Card key={slideIndex} className=\"bg-[#D8CFD0] rounded-lg\">\r\n                                    <CardBody className=\"p-4\">\r\n                                      <div className=\"flex items-start space-x-4\">\r\n                                        <Chip variant=\"flat\" color=\"secondary\" size=\"sm\" className=\"bg-[#697184]/10 text-[#697184]\">\r\n                                          Slide {slide.slide_number}\r\n                                        </Chip>\r\n                                        <p className=\"text-[#413F3D] flex-1\">\r\n                                          {highlightText(slide.text, slide.highlight)}\r\n                                        </p>\r\n                                      </div>\r\n                                    </CardBody>\r\n                                  </Card>\r\n                                ))}\r\n                                {result.matched_slides.length > 2 && (\r\n                                  <p className=\"text-sm text-[#B1A6A4] italic pl-4\">\r\n                                    +{result.matched_slides.length - 2} more slide matches...\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <Divider className=\"my-4\" />\r\n                          <Button\r\n                            as={Link}\r\n                            href={`/results/${result.job_id}`}\r\n                            variant=\"light\"\r\n                            color=\"primary\"\r\n                            className=\"bg-[#697184] text-[#F2F1EF] rounded-full hover:bg-[#5a6173]\"\r\n                            endContent={<ExternalLink className=\"w-4 h-4\" />}\r\n                          >\r\n                            View full meeting details\r\n                          </Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-12\">\r\n                    <div className=\"w-20 h-20 bg-[#D8CFD0] rounded-full flex items-center justify-center mx-auto mb-6\">\r\n                      <SearchIcon className=\"w-10 h-10 text-[#697184]\" />\r\n                    </div>\r\n                    <h3 className=\"text-xl font-semibold text-[#413F3D] mb-3\">No results found</h3>\r\n                    <p className=\"text-[#B1A6A4] text-lg\">\r\n                      Try searching for different keywords or check your spelling.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <p className=\"text-[#B1A6A4] text-lg\">Search failed. Please try again.</p>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n      {/* Search Tips */}\r\n      <Card className=\"bg-[#D8CFD0] border border-[#697184] rounded-2xl\">\r\n        <CardHeader>\r\n          <h3 className=\"text-xl font-semibold text-[#697184]\">Search Tips</h3>\r\n        </CardHeader>\r\n        <CardBody className=\"pt-0\">\r\n          <ul className=\"text-[#697184] space-y-2\">\r\n            <li className=\"flex items-start space-x-2\">\r\n              <span className=\"text-[#697184] mt-1\">•</span>\r\n              <span>Search for specific topics, action items, or speaker names</span>\r\n            </li>\r\n            <li className=\"flex items-start space-x-2\">\r\n              <span className=\"text-[#697184] mt-1\">•</span>\r\n              <span>Use multiple keywords to narrow down results</span>\r\n            </li>\r\n            <li className=\"flex items-start space-x-2\">\r\n              <span className=\"text-[#697184] mt-1\">•</span>\r\n              <span>Results are ranked by relevance to your query</span>\r\n            </li>\r\n            <li className=\"flex items-start space-x-2\">\r\n              <span className=\"text-[#697184] mt-1\">•</span>\r\n              <span>Search covers both transcript content and slide text</span>\r\n            </li>\r\n            <li className=\"flex items-start space-x-2\">\r\n              <span className=\"text-[#697184] mt-1\">•</span>\r\n              <span>Click on any result to view the full meeting details</span>\r\n            </li>\r\n          </ul>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1960, "column": 0}, "map": {"version":3,"sources":["file:///Users/khursheedfatima/Documents/Projects/Meeting_summerizer/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\nimport Upload from '../components/Upload';\nimport Search from '../components/Search';\n\nexport default function HomePage() {\n  return (\n    <section className=\"w-full min-h-screen flex flex-col items-center justify-center py-16 px-4\">\n      <div className=\"max-w-3xl w-full mx-auto space-y-16\">\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-5xl md:text-7xl font-extrabold text-[--color-card] mb-4 drop-shadow-lg\">\n            AI Meeting Summarizer\n          </h1>\n          <p className=\"max-w-2xl mx-auto text-xl text-[--color-secondary] font-medium mb-8\">\n            Upload your meeting media and slides for instant AI summaries, smart transcripts, and searchable content.\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center space-y-12\">\n          <Upload />\n          <Search />\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA8E;;;;;;sCAG5F,8OAAC;4BAAE,WAAU;sCAAsE;;;;;;;;;;;;8BAIrF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4HAAA,CAAA,UAAM;;;;;sCACP,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;;;;;;;;;;;;;AAKjB","debugId":null}}]
}